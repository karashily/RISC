vsim -gui work.main
# vsim -gui work.main 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading work.main(main_arch)
# Loading work.fetch(fetch_arch)
# Loading work.pc_predictor(pc_predictor_arch)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_signed(body)
# Loading work.regi(arch)
# Loading work.hazard_detection_unit(hazard_detection_unit_arch)
# Loading work.fetch_hazard(fetch_hazard_arch)
# Loading work.extra_fetch_hazard(extra_fetch_hazard_arch)
# Loading work.register1(description)
# Loading work.ret_rti_reset_int_unit(ret_rti_reset_int_arch)
# Loading work.dec(arch)
# Loading work.regfile(arch)
# Loading work.reg(arch)
# Loading work.control_unit(arch)
# Loading work.id_ex(arch)
# Loading work.onebitreg(arch)
# ** Warning: (vsim-3473) Component instance "flag_reg : flagRegster" is not bound.
#    Time: 0 ps  Iteration: 0  Instance: /main File: C:/Users/MohamedAhmed/Documents/GitHub/RISC/fetch/main.vhd
# ** Warning: (vsim-3473) Component instance "execution_stage : excute" is not bound.
#    Time: 0 ps  Iteration: 0  Instance: /main File: C:/Users/MohamedAhmed/Documents/GitHub/RISC/fetch/main.vhd
# Loading work.ex_mem(arch)
# Loading work.memo_stage(arch)
# Loading work.handler(arch)
# Loading work.mux4_1(behavioral)
# Loading work.mux2_1(behavioral)
# Loading work.small_alu(arch)
# Loading work.ram(behavioral)
# Loading work.mem_wb(arch)
# Loading work.wb(arch)
# Loading work.swap_handler(arch)
# vsim -gui work.main 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading work.main(main_arch)
# Loading work.fetch(fetch_arch)
# Loading work.pc_predictor(pc_predictor_arch)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_signed(body)
# Loading work.regi(arch)
# Loading work.hazard_detection_unit(hazard_detection_unit_arch)
# Loading work.fetch_hazard(fetch_hazard_arch)
# Loading work.extra_fetch_hazard(extra_fetch_hazard_arch)
# Loading work.register1(description)
# Loading work.ret_rti_reset_int_unit(ret_rti_reset_int_arch)
# Loading work.dec(arch)
# Loading work.regfile(arch)
# Loading work.reg(arch)
# Loading work.control_unit(arch)
# Loading work.id_ex(arch)
# Loading work.onebitreg(arch)
# ** Warning: (vsim-3473) Component instance "flag_reg : flagRegster" is not bound.
#    Time: 0 ps  Iteration: 0  Instance: /main File: C:/Users/MohamedAhmed/Documents/GitHub/RISC/fetch/main.vhd
# ** Warning: (vsim-3473) Component instance "execution_stage : excute" is not bound.
#    Time: 0 ps  Iteration: 0  Instance: /main File: C:/Users/MohamedAhmed/Documents/GitHub/RISC/fetch/main.vhd
# Loading work.ex_mem(arch)
# Loading work.memo_stage(arch)
# Loading work.handler(arch)
# Loading work.mux4_1(behavioral)
# Loading work.mux2_1(behavioral)
# Loading work.small_alu(arch)
# Loading work.ram(behavioral)
# Loading work.mem_wb(arch)
# Loading work.wb(arch)
# Loading work.swap_handler(arch)
add wave -position end  sim:/main/A
add wave -position end  sim:/main/clk
add wave -position end  sim:/main/reset
add wave -position end  sim:/main/int
add wave -position end  sim:/main/prediction_bit
add wave -position end  sim:/main/Rdst_val
add wave -position end  sim:/main/PC_flags_mem
add wave -position end  sim:/main/unpredicted_PC_E
add wave -position end  sim:/main/load_ret_PC
add wave -position end  sim:/main/wrong_prediction_bit
add wave -position end  sim:/main/PC_load
add wave -position end  sim:/main/PC
add wave -position end  sim:/main/opcode_FD
add wave -position end  sim:/main/opcode_DE
add wave -position end  sim:/main/opcode_EM
add wave -position end  sim:/main/opcode_MW
add wave -position end  sim:/main/Rdst_FD_code
add wave -position end  sim:/main/Rdst_DE_code
add wave -position end  sim:/main/Rdst_EM_code
add wave -position end  sim:/main/Rdst_MW_code
add wave -position end  sim:/main/Rsrc1_DE_code
add wave -position end  sim:/main/Rsrc1_EM_code
add wave -position end  sim:/main/Rsrc1_MW_code
add wave -position end  sim:/main/Rsrc2_DE_code
add wave -position end  sim:/main/ZF
add wave -position end  sim:/main/INT_EM
add wave -position end  sim:/main/RESET_EM
add wave -position end  sim:/main/control_unit_mux
add wave -position end  sim:/main/fetch_stall
add wave -position end  sim:/main/IR
add wave -position end  sim:/main/pc_flags
add wave -position end  sim:/main/RAM_INS_ADDR
add wave -position end  sim:/main/RAM_INS_WR
add wave -position end  sim:/main/RAM_INS_IN
add wave -position end  sim:/main/RAM_INS_OUT
add wave -position end  sim:/main/mem_out
add wave -position end  sim:/main/FDRegOut
add wave -position end  sim:/main/FD_unpred_pc_out
add wave -position end  sim:/main/FD_pc_out
add wave -position end  sim:/main/FD_ir_out
add wave -position end  sim:/main/FD_rst_out
add wave -position end  sim:/main/FD_intr_out
add wave -position end  sim:/main/FDRegIn
add wave -position end  sim:/main/unpred_pc
add wave -position end  sim:/main/dec_src1_code
add wave -position end  sim:/main/dec_src2_code
add wave -position end  sim:/main/dec_dst_code
add wave -position end  sim:/main/dec_Rsrc1_val
add wave -position end  sim:/main/dec_Rsrc2_val
add wave -position end  sim:/main/dec_extended_imm
add wave -position end  sim:/main/dec_ea
add wave -position end  sim:/main/dec_ex_cs
add wave -position end  sim:/main/dec_mem_cs
add wave -position end  sim:/main/dec_wb_cs
add wave -position end  sim:/main/dec_PC_out
add wave -position end  sim:/main/dec_unpred_PC_out
add wave -position end  sim:/main/dec_opcode
add wave -position end  sim:/main/dec_rst_out
add wave -position end  sim:/main/dec_intr_out
add wave -position end  sim:/main/idex_ex_cs_out
add wave -position end  sim:/main/idex_mem_cs_out
add wave -position end  sim:/main/idex_wb_cs_out
add wave -position end  sim:/main/idex_opcode_out
add wave -position end  sim:/main/idex_src1_val_out
add wave -position end  sim:/main/idex_src2_val_out
add wave -position end  sim:/main/idex_src1_code_out
add wave -position end  sim:/main/idex_src2_code_out
add wave -position end  sim:/main/idex_dst_code_out
add wave -position end  sim:/main/idex_extended_imm_out
add wave -position end  sim:/main/idex_ea_out
add wave -position end  sim:/main/idex_pc_out
add wave -position end  sim:/main/idex_unpred_pc_out
add wave -position end  sim:/main/idex_reset_out
add wave -position end  sim:/main/idex_intr_out
add wave -position end  sim:/main/ex_mem_flags_in
add wave -position end  sim:/main/ex_mem_output_in
add wave -position end  sim:/main/ex_mem_src1_code_in
add wave -position end  sim:/main/ex_mem_src2_code_in
add wave -position end  sim:/main/ex_mem_dst_code_in
add wave -position end  sim:/main/ex_mem_ea_in
add wave -position end  sim:/main/ex_mem_intr_mem_in
add wave -position end  sim:/main/ex_mem_reset_mem_in
add wave -position end  sim:/main/ex_mem_pc_in
add wave -position end  sim:/main/ex_mem_unpred_pc_in
add wave -position end  sim:/main/flag_reg_out
add wave -position end  sim:/main/flag_reg_in
add wave -position end  sim:/main/ex_flag_reg_out
add wave -position end  sim:/main/ex_swap_flag_in
add wave -position end  sim:/main/ex_src1_value_in
add wave -position end  sim:/main/ex_mem_cs_out
add wave -position end  sim:/main/ex_wb_cs_out
add wave -position end  sim:/main/ex_opcode_out
add wave -position end  sim:/main/ex_flags_out
add wave -position end  sim:/main/ex_output_out
add wave -position end  sim:/main/ex_src1_code_out
add wave -position end  sim:/main/ex_src2_code_out
add wave -position end  sim:/main/ex_dst_code_out
add wave -position end  sim:/main/ex_mem_extended_imm_out
add wave -position end  sim:/main/ex_ea_out
add wave -position end  sim:/main/ex_intr_mem_out
add wave -position end  sim:/main/ex_reset_mem_out
add wave -position end  sim:/main/ex_pc_out
add wave -position end  sim:/main/ex_unpred_pc_out
add wave -position end  sim:/main/ex_swap_flag_out
add wave -position end  sim:/main/ex_src1_value_out
add wave -position end  sim:/main/mem_wb_cs_out
add wave -position end  sim:/main/mem_opcode_out
add wave -position end  sim:/main/mem_result_out
add wave -position end  sim:/main/mem_exe_out
add wave -position end  sim:/main/mem_src_val_out
add wave -position end  sim:/main/mem_src1_code_out
add wave -position end  sim:/main/mem_src2_code_out
add wave -position end  sim:/main/mem_dst_code_out
add wave -position end  sim:/main/mem_swap_flag_out
add wave -position end  sim:/main/mem_intr_wb_out
add wave -position end  sim:/main/mem_reset_wb_out
add wave -position end  sim:/main/wb_val_out
add wave -position end  sim:/main/wb_addr_out
add wave -position end  sim:/main/wb_mem_out
add wave -position end  sim:/main/WB_src1_val_out
add wave -position end  sim:/main/WB_src2_val_out
add wave -position end  sim:/main/mem_src1_val_out
add wave -position end  sim:/main/mem_src2_val_out
add wave -position end  sim:/main/IO_IN
add wave -position end  sim:/main/IO_OUT
add wave -position end  sim:/main/ALU_output_selector
add wave -position end  sim:/main/IO_output_selector
add wave -position end  sim:/main/ForwardUnit_src1_sel
add wave -position end  sim:/main/ForwardUnit_src2_sel
add wave -position end  sim:/main/src1_sel
add wave -position end  sim:/main/src2_sel
force -freeze sim:/main/clk 1 0, 0 {50 ps} -r 100
force -freeze sim:/main/reset 1 0
force -freeze sim:/main/int 0 0
force -freeze sim:/main/ForwardUnit_src1_sel 00 0
force -freeze sim:/main/ForwardUnit_src2_sel 00 0
force -freeze sim:/main/A 0000000000000000 0
run